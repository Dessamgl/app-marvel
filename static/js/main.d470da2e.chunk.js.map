{"version":3,"sources":["assets/iron-man.svg","styles/global.ts","services/api.ts","components/Modal/styles.ts","components/Modal/index.tsx","assets/marvel.png","utils/sendEmail.ts","pages/Home/styles.ts","pages/Home/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","IronManBackground","api","axios","create","baseURL","params","ts","apikey","hash","Container","styled","div","Content","Footer","shade","Modal","show","comic","rest","className","id","title","images","path","src","extension","alt","pageCount","description","type","sendEmail","userMailToSend","message","a","emailjs","send","process","toemail","result","status","Title","h1","Form","form","props","hasError","css","Error","span","Comics","ButtonFloat","button","hasOpened","Home","useState","inputComicName","setInputComicName","comicsData","setComicsData","comicsSelected","setComicsSelected","card","setCard","inputError","setInputError","inputMailBox","setInputMailBox","setShow","userEmailValue","setUserEmailValue","event","preventDefault","get","titleStartsWith","response","data","count","results","showModal","useCallback","map","btoa","thumbnail","toast","success","error","showModalWithData","logoMarvel","style","width","height","backgroundColor","onSubmit","onChange","target","value","placeholder","length","selected","onClick","comicId","comicIndex","findIndex","newComic","newComicList","newSelectedComics","filter","comics","handleSelectCard","color","Routes","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d470da2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/iron-man.44b59cef.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport IronManBackground from '../assets/iron-man.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #000000 url(${IronManBackground}) no-repeat 87% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst publicKey = '35bc09b43df66e5c38b2a6f5bc7e6f8b';\n\nconst api = axios.create({\n  baseURL: 'https://gateway.marvel.com',\n  params: {\n    ts: '1613092991',\n    apikey: publicKey,\n    hash: 'fa726e2e14e6dfbf8cd45637f07bc92b',\n  },\n});\n\nexport default api;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  .modal {\n    max-width: 900px;\n    background: #1c1c1c;\n    border: none;\n    padding: 16px;\n    border-radius: 5px;\n    transition: 1.1s ease-out;\n    opacity: 1;\n    visibility: visible;\n\n    position: relative;\n  }\n\n  @media (prefers-reduced-motion) {\n    .modal {\n      offset-path: none;\n    }\n  }\n\n  .modal-overlay {\n    width: 100%;\n    height: 100%;\n    max-width: 960px;\n    background-color: rgba(0, 0, 0, 0.7);\n    padding-right: 40px;\n\n    position: fixed;\n    top: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    opacity: 0;\n    visibility: hidden;\n\n    z-index: 999;\n  }\n\n  .modal-overlay.active {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  #centered-toggle-button {\n    position: absolute;\n  }\n\n  .container {\n    max-width: 900px;\n    max-height: 600px;\n\n    padding: 16px;\n\n    h1 {\n      font-size: 28px;\n      color: #b5b5b5;\n\n      margin-bottom: 20px;\n    }\n  }\n\n  @media (max-width: 520px) {\n    .Container {\n      h1 {\n        width: 250px;\n        margin: 0 auto;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n\n  @media (max-width: 520px) {\n    flex-direction: column;\n\n    .comic-image img {\n      width: 150px;\n      display: flex;\n      margin: 0 auto;\n    }\n\n    .comic-details {\n      margin: 20px 0;\n\n      div {\n        height: 20px;\n      }\n\n      div + div {\n        height: 120px;\n      }\n    }\n  }\n\n  img {\n    width: 250px;\n  }\n\n  .comic-details {\n    div {\n      display: flex;\n      margin-left: 20px;\n      flex: 1;\n    }\n\n    div + div {\n      margin-top: 16px;\n    }\n\n    strong {\n      margin-right: 8px;\n      color: #eead0e;\n    }\n\n    span {\n      float: left;\n      overflow-y: auto;\n      max-height: 350px;\n      color: #fff;\n\n      ::-webkit-scrollbar-track {\n        background-color: #000;\n      }\n\n      ::-webkit-scrollbar {\n        width: 6px;\n        background: #000;\n      }\n\n      ::-webkit-scrollbar-thumb {\n        background: #575757;\n      }\n    }\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n\n  @media (max-width: 520px) {\n    justify-content: center;\n  }\n\n  padding: 8px 16px;\n\n  button {\n    width: 180px;\n    height: 50px;\n    background: #eead0e;\n    border-radius: 5px;\n    border: 0;\n    color: #1c1c1c;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#eead0e')};\n    }\n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React, { ButtonHTMLAttributes } from 'react';\nimport { Comic } from '../../pages/Home';\nimport { Container, Content, Footer } from './styles';\n\ninterface ModalProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  show: boolean;\n  comic?: Comic;\n}\n\nconst Modal: React.FC<ModalProps> = ({ show, comic, ...rest }) => {\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <div className={`modal-overlay ${show ? 'active' : ''}`}>\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"container\">\n            <h1>{comic?.title}</h1>\n\n            <Content>\n              <div className=\"comic-image\">\n                {comic?.images[0]?.path && (\n                  <img\n                    src={`${comic.images[0]?.path}.${comic.images[0]?.extension}`}\n                    alt={comic.title}\n                  />\n                )}\n              </div>\n\n              <div className=\"comic-details\">\n                <div>\n                  <strong>Páginas: </strong>\n                  <span>{comic?.pageCount ? ' -' : comic?.pageCount}</span>\n                </div>\n\n                <div>\n                  <strong>Descrição: </strong>\n                  <span>{!comic?.description ? ' -' : comic.description}</span>\n                </div>\n              </div>\n            </Content>\n          </div>\n\n          <Footer>\n            <button className=\"toggle-button\" type=\"button\" {...rest}>\n              Fechar\n            </button>\n          </Footer>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/marvel.69550def.png\";","import emailjs from 'emailjs-com';\n\nexport default async function sendEmail(\n  userMailToSend: string,\n  message: string,\n): Promise<boolean> {\n  const result = await emailjs.send(\n    `${process.env.REACT_APP_MAIL_SERVICE_ID}`,\n    `${process.env.REACT_APP_MAIL_TEMPLATE_ID}`,\n    {\n      message: `${message}`,\n      toemail: `${userMailToSend}`,\n    },\n    `${process.env.REACT_APP_MAIL_USER_ID}`,\n  );\n\n  return result.status === 200;\n}\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\ninterface FormEmail {\n  hasOpened: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #b5b5b5;\n  max-width: 470px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 100%;\n  flex: 1;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    color: #b5b5b5;\n    background-color: #1c1c1c;\n    border-radius: 5px 0 0 5px;\n    border: 2px solid #1c1c1c;\n\n    ${props =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &:focus {\n      border: 2px solid #eead0e;\n    }\n\n    &::placeholder {\n      color: #b5b5b5;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #eead0e;\n    border-radius: 0px 5px 5px 0px;\n    border: 0;\n    color: #1c1c1c;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#eead0e')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n`;\n\nexport const Comics = styled.div`\n  margin-top: 80px;\n  max-width: 100%;\n\n  li {\n    background: #1c1c1c;\n    border-radius: 5px;\n    width: 100%;\n    padding: 16px 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + li {\n      margin-top: 16px;\n    }\n\n    &.selected-card {\n      border: 1px solid #fff;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    button {\n      width: 150px;\n      height: 70px;\n      background: #eead0e;\n      border-radius: 5px;\n      border: 0;\n      color: #1c1c1c;\n      font-weight: bold;\n      transition: background-color 0.2s;\n\n      &:hover {\n        background: ${shade(0.2, '#EEAD0E')};\n      }\n    }\n  }\n    img {\n      width: 100px;\n      height: 150px;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #b5b5b5;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbcdd6;\n    }\n  }\n\n  @media (max-width: 500px) {\n      li {\n        display: grid;\n        grid-template-columns: 1fr;\n        text-align: center;\n        height: 370px;\n\n        img {\n          margin: 0 auto;\n        }\n\n        strong {\n          margin: 10px 0;\n        }\n\n        button {\n          margin: 0 auto;\n          width: 100px;\n          height: 50px\n        }\n      }\n    }\n  `;\n\nexport const ButtonFloat = styled.button<FormEmail>`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 10;\n\n  width: 70px;\n  height: 70px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: #002034;\n  border-radius: 5px;\n  border: 0;\n  color: #fff;\n\n  transition: all 0.2s;\n\n  input,\n  .send-email {\n    display: none;\n    visibility: hidden;\n  }\n\n  ${props =>\n    props.hasOpened &&\n    css`\n      width: 300px;\n      justify-content: space-evenly;\n      padding: 0 16px;\n      cursor: default;\n\n      .open-box-email {\n        display: none;\n        visibility: hidden;\n      }\n\n      input,\n      .send-email {\n        display: inline-block;\n        visibility: visible;\n      }\n\n      input {\n        border-radius: 5px;\n        border: 0;\n        height: 33px;\n        padding: 0 8px;\n      }\n\n      .send-email {\n        cursor: pointer;\n        &:hover {\n          color: ${shade(0.2, '#fff')};\n        }\n      }\n    `}\n\n  &:hover {\n    background: ${shade(0.2, '#002034')};\n  }\n\n  svg {\n    font-size: 30px;\n  }\n`;\n","import React, { useState, useCallback, FormEvent } from 'react';\n\nimport { FiMail, FiSend } from 'react-icons/fi';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport api from '../../services/api';\nimport Modal from '../../components/Modal';\nimport logoMarvel from '../../assets/marvel.png';\nimport sendEmail from '../../utils/sendEmail';\n\nimport { Title, Form, Comics, Error, ButtonFloat } from './styles';\n\nexport interface Comic {\n  id: number;\n  title: string;\n  description: string;\n  pageCount: number;\n  images: {\n    path: string;\n    extension: string;\n    0: any;\n  };\n  thumbnail: {\n    path: string;\n    extension: string;\n  };\n  selected: boolean;\n}\n\nconst Home: React.FC = () => {\n  const [inputComicName, setInputComicName] = useState('');\n  const [comicsData, setComicsData] = useState<Comic[]>([]);\n  const [comicsSelected, setComicsSelected] = useState<Comic[]>([]);\n  const [card, setCard] = useState<Comic>();\n  const [inputError, setInputError] = useState('');\n  const [inputMailBox, setInputMailBox] = useState(false);\n  const [show, setShow] = useState(false);\n  const [userEmailValue, setUserEmailValue] = useState('');\n\n  async function getComics(event: FormEvent<HTMLFormElement>): Promise<void> {\n    event.preventDefault();\n\n    if (!inputComicName) {\n      setInputError('Digite o título do quadrinho em inglês');\n      return;\n    }\n    try {\n      const response = await api.get('v1/public/comics', {\n        params: {\n          titleStartsWith: inputComicName,\n        },\n      });\n      if (response.data.data.count === 0) {\n        setInputError('Nenhum quadrinho encontrado');\n        return;\n      }\n\n      const { results } = response.data.data;\n      setComicsData(results as Comic[]);\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse quadrinho');\n    }\n  }\n\n  const showModal = useCallback(() => {\n    setShow(!show);\n  }, [show]);\n\n  function handleSelectCard(comicId: number): void {\n    const comicIndex = comicsData.findIndex(comic => comic.id === comicId);\n    const newComic = comicsData[comicIndex];\n\n    newComic.selected = !newComic.selected;\n\n    const newComicList = [...comicsData, newComic];\n\n    setComicsData(newComicList);\n\n    if (newComic.selected) {\n      setComicsSelected([newComic, ...comicsSelected]);\n    } else {\n      const newSelectedComics = comicsSelected.filter(\n        comics => comics.id !== comicId,\n      );\n\n      if (newSelectedComics.length === 0) {\n        setInputMailBox(false);\n      }\n\n      setComicsSelected(newSelectedComics);\n    }\n  }\n\n  async function sendMailToUser(): Promise<void> {\n    const message = `\n    ${comicsSelected.map(\n      comic =>\n        `Título: ${comic.title}\n      Descrição: ${comic.description}\n      <img src=\"data:image/jpg;base64,${btoa(\n        `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\n      )}\" >\n      `,\n    )}\n    `;\n\n    const response = await sendEmail(userEmailValue, message);\n\n    if (response) {\n      toast.success('E-mail enviado com sucesso!');\n    } else {\n      toast.error('Ops! Erro ao enviar o e-mail');\n    }\n  }\n\n  const showModalWithData = useCallback(\n    (data: Comic) => {\n      setCard(data);\n      setShow(!show);\n    },\n    [show],\n  );\n\n  return (\n    <>\n      <img\n        src={logoMarvel}\n        style={{ width: 150, height: 70, backgroundColor: '#b5b5b5' }}\n        alt=\"Marvel\"\n      />\n      <Title>Explore os quadrinhos da Marvel</Title>\n      <Form hasError={!!inputError} onSubmit={getComics}>\n        <input\n          onChange={event => setInputComicName(event.target.value)}\n          placeholder=\"Digite o título do quadrinho\"\n          type=\"text\"\n        />\n\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Comics>\n        {comicsData.length !== 0 &&\n          comicsData.map(result => (\n            <>\n              <li\n                key={result.id}\n                className={result.selected ? 'selected-card' : ''}\n                onClick={() => handleSelectCard(result.id)}\n              >\n                <img\n                  src={`${result.images[0]?.path}.${result.images[0]?.extension}`}\n                  alt={result.title}\n                />\n                <div>\n                  <strong>{result.title}</strong>\n                </div>\n                <button type=\"button\" onClick={() => showModalWithData(result)}>\n                  Detalhes\n                </button>\n              </li>\n            </>\n          ))}\n      </Comics>\n      {comicsSelected.length > 0 && (\n        <ButtonFloat\n          type=\"button\"\n          hasOpened={inputMailBox}\n          onClick={() => setInputMailBox(true)}\n        >\n          <FiMail color=\"#9fdcfa\" className=\"open-box-email\" />\n          <input\n            type=\"text\"\n            value={userEmailValue}\n            onChange={event => setUserEmailValue(event.target.value)}\n          />\n\n          <FiSend className=\"send-email\" onClick={sendMailToUser} />\n        </ButtonFloat>\n      )}\n\n      <ToastContainer />\n      <Modal onClick={showModal} show={show} comic={card} />\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n    <Route component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}