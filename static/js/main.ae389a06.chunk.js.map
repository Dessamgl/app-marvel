{"version":3,"sources":["assets/iron-man.svg","styles/global.ts","services/api.ts","components/Modal/styles.ts","components/Modal/index.tsx","assets/marvel.png","pages/Home/styles.ts","pages/Home/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","IronManBackground","api","axios","create","baseURL","params","ts","apikey","hash","Container","styled","div","Content","Footer","shade","Modal","show","comic","rest","className","id","title","images","path","src","extension","alt","pageCount","description","type","Title","h1","Form","form","props","hasError","css","Error","span","Comics","Home","useState","inputComicName","setInputComicName","comicsData","setComicsData","card","setCard","inputError","setInputError","setShow","event","a","preventDefault","get","titleStartsWith","response","results","data","showModal","useCallback","showModalWithData","logoMarvel","style","width","height","backgroundColor","onSubmit","onChange","target","value","placeholder","length","map","result","onClick","Routes","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae389a06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/iron-man.44b59cef.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport IronManBackground from '../assets/iron-man.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #000000 url(${IronManBackground}) no-repeat 87% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst publicKey = '35bc09b43df66e5c38b2a6f5bc7e6f8b';\n\nconst api = axios.create({\n  baseURL: 'https://gateway.marvel.com',\n  params: {\n    ts: '1613092991',\n    apikey: publicKey,\n    hash: 'fa726e2e14e6dfbf8cd45637f07bc92b',\n  },\n});\n\nexport default api;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  .modal {\n    max-width: 900px;\n    background: #1c1c1c;\n    border: none;\n    padding: 16px;\n    border-radius: 5px;\n    transition: 1.1s ease-out;\n    opacity: 1;\n    visibility: visible;\n\n    position: relative;\n  }\n\n  @media (prefers-reduced-motion) {\n    .modal {\n      offset-path: none;\n    }\n  }\n\n  .modal-overlay {\n    width: 100%;\n    height: 100%;\n    max-width: 960px;\n    background-color: rgba(0, 0, 0, 0.7);\n\n    position: fixed;\n    top: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    opacity: 0;\n    visibility: hidden;\n\n    z-index: 999;\n  }\n\n  .modal-overlay.active {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  #centered-toggle-button {\n    position: absolute;\n  }\n\n  .container {\n    max-width: 900px;\n    max-height: 600px;\n\n    padding: 16px;\n\n    h1 {\n      font-size: 28px;\n      color: #b5b5b5;\n\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n\n  img {\n    width: 250px;\n  }\n\n  .comic-details {\n    div {\n      display: flex;\n      margin-left: 20px;\n      flex: 1;\n    }\n\n    div + div {\n      margin-top: 16px;\n    }\n\n    strong {\n      margin-right: 8px;\n      color: #eead0e;\n    }\n\n    span {\n      float: left;\n      overflow-y: auto;\n      max-height: 350px;\n      color: #fff;\n\n      ::-webkit-scrollbar-track {\n        background-color: #000;\n      }\n\n      ::-webkit-scrollbar {\n        width: 6px;\n        background: #000;\n      }\n\n      ::-webkit-scrollbar-thumb {\n        background: #575757;\n      }\n    }\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n\n  padding: 8px 16px;\n\n  button {\n    width: 180px;\n    height: 50px;\n    background: #eead0e;\n    border-radius: 5px;\n    border: 0;\n    color: #1c1c1c;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#eead0e')};\n    }\n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React, { ButtonHTMLAttributes } from 'react';\nimport { Comic } from '../../pages/Home';\nimport { Container, Content, Footer } from './styles';\n\ninterface ModalProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  show: boolean;\n  comic?: Comic;\n}\n\nconst Modal: React.FC<ModalProps> = ({ show, comic, ...rest }) => {\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <div className={`modal-overlay ${show ? 'active' : ''}`}>\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"container\">\n            <h1>{comic?.title}</h1>\n\n            <Content>\n              <div className=\"comic-image\">\n                {comic?.images[0]?.path && (\n                  <img\n                    src={`${comic.images[0]?.path}.${comic.images[0]?.extension}`}\n                    alt={comic.title}\n                  />\n                )}\n              </div>\n\n              <div className=\"comic-details\">\n                <div>\n                  <strong>Páginas: </strong>\n                  <span>{comic?.pageCount ? ' -' : comic?.pageCount}</span>\n                </div>\n\n                <div>\n                  <strong>Descrição: </strong>\n                  <span>{!comic?.description ? ' -' : comic.description}</span>\n                </div>\n              </div>\n            </Content>\n          </div>\n\n          <Footer>\n            <button className=\"toggle-button\" type=\"button\" {...rest}>\n              Fechar\n            </button>\n          </Footer>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/marvel.69550def.png\";","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #b5b5b5;\n  max-width: 470px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 100%;\n  flex: 1;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    color: #b5b5b5;\n    background-color: #1c1c1c;\n    border-radius: 5px 0 0 5px;\n    border: 2px solid #1c1c1c;\n\n    ${props =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &:focus {\n      border: 2px solid #eead0e;\n    }\n\n    &::placeholder {\n      color: #b5b5b5;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #eead0e;\n    border-radius: 0px 5px 5px 0px;\n    border: 0;\n    color: #1c1c1c;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#eead0e')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n`;\n\nexport const Comics = styled.div`\n  margin-top: 80px;\n  max-width: 100%;\n\n  li {\n    background: #1c1c1c;\n    border-radius: 5px;\n    width: 100%;\n    padding: 16px 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + li {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    button {\n      width: 150px;\n      height: 70px;\n      background: #eead0e;\n      border-radius: 5px;\n      border: 0;\n      color: #1c1c1c;\n      font-weight: bold;\n      transition: background-color 0.2s;\n\n      &:hover {\n        background: ${shade(0.2, '#EEAD0E')};\n      }\n    }\n\n  }\n\n    img {\n      width: 100px;\n      height: 150px;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #b5b5b5;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbcdd6;\n    }\n  }\n  `;\n","import React, { useState, useCallback, FormEvent } from 'react';\nimport api from '../../services/api';\n\nimport Modal from '../../components/Modal';\nimport logoMarvel from '../../assets/marvel.png';\n\nimport { Title, Form, Comics, Error } from './styles';\n\nexport interface Comic {\n  id: number;\n  title: string;\n  description: string;\n  pageCount: number;\n  images: {\n    path: string;\n    extension: string;\n    0: any;\n  };\n}\n\nconst Home: React.FC = () => {\n  const [inputComicName, setInputComicName] = useState('');\n  const [comicsData, setComicsData] = useState<Comic[]>([]);\n  const [card, setCard] = useState<Comic>();\n  const [inputError, setInputError] = useState('');\n  const [show, setShow] = useState(false);\n\n  async function getComics(event: FormEvent<HTMLFormElement>): Promise<void> {\n    event.preventDefault();\n\n    if (!inputComicName) {\n      setInputError('Digite o título do quadrinho em inglês');\n      return;\n    }\n\n    try {\n      const response = await api.get('v1/public/comics', {\n        params: {\n          titleStartsWith: inputComicName,\n        },\n      });\n\n      const { results } = response.data.data;\n      setComicsData(results as Comic[]);\n      setInputComicName('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse quadrinho');\n    }\n  }\n\n  const showModal = useCallback(() => {\n    setShow(!show);\n  }, [show]);\n\n  const showModalWithData = useCallback(\n    (data: Comic) => {\n      setCard(data);\n      setShow(!show);\n    },\n    [show],\n  );\n\n  return (\n    <>\n      <img\n        src={logoMarvel}\n        style={{ width: 150, height: 70, backgroundColor: '#b5b5b5' }}\n        alt=\"Marvel\"\n      />\n      <Title>Explore os quadrinhos da Marvel</Title>\n      <Form hasError={!!inputError} onSubmit={getComics}>\n        <input\n          onChange={event => setInputComicName(event.target.value)}\n          placeholder=\"Digite o título do quadrinho\"\n          type=\"text\"\n        />\n\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Comics>\n        {comicsData.length !== 0 &&\n          comicsData.map(result => (\n            <>\n              <li key={result.id}>\n                <img\n                  src={`${result.images[0]?.path}.${result.images[0]?.extension}`}\n                  alt={result.title}\n                />\n                <div>\n                  <strong>{result.title}</strong>\n                </div>\n                <button type=\"button\" onClick={() => showModalWithData(result)}>\n                  Detalhes\n                </button>\n              </li>\n            </>\n          ))}\n      </Comics>\n      <Modal onClick={showModal} show={show} comic={card} />\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n    <Route component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}