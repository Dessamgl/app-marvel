{"version":3,"sources":["assets/iron-man.svg","styles/global.ts","services/api.ts","components/Modal/index.tsx","assets/marvel.png","pages/Home/styles.ts","pages/Home/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","IronManBackground","api","axios","create","baseURL","params","ts","apikey","hash","Modal","show","comic","rest","className","id","title","description","pageCount","type","Title","styled","h1","Form","form","props","hasError","css","Error","span","Comics","div","shade","Home","useState","comicName","setComicName","comicsData","setComicsData","card","setCard","inputError","setInputError","setShow","a","get","titleStartsWith","response","results","data","useEffect","loadComics","showModal","useCallback","comicsSearch","text","value","target","length","setTimeout","showModalWithData","src","logoMarvel","style","width","height","backgroundColor","alt","onSubmit","onChange","placeholder","map","result","images","path","extension","onClick","Routes","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79340b6a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/iron-man.44b59cef.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport IronManBackground from '../assets/iron-man.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #000000 url(${IronManBackground}) no-repeat 87% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst publicKey = '35bc09b43df66e5c38b2a6f5bc7e6f8b';\n\nconst api = axios.create({\n  baseURL: 'https://gateway.marvel.com',\n  params: {\n    ts: '1613092991',\n    apikey: publicKey,\n    hash: 'fa726e2e14e6dfbf8cd45637f07bc92b',\n  },\n});\n\nexport default api;\n","/* eslint-disable react/prop-types */\nimport React, { ButtonHTMLAttributes } from 'react';\nimport { Comic } from '../../pages/Home';\n\nimport './styles.css';\n\ninterface ModalProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  show: boolean;\n  comic?: Comic;\n}\n\nconst Modal: React.FC<ModalProps> = ({ show, comic, ...rest }) => {\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className={`modal-overlay ${show ? 'active' : ''}`}>\n      <div className=\"modal\" id=\"modal\">\n        <h1>{comic?.title}</h1>\n        <div className=\"content\">\n          <div>\n            <strong>Descrição:</strong>\n            {!comic?.description\n              ? 'Quadrinho sem descrição'\n              : comic.description}\n          </div>\n          <div>\n            <strong>Número de páginas:</strong>\n            {!comic?.pageCount || comic?.pageCount === 0\n              ? 'Quadrinho sem número de páginas'\n              : comic.pageCount}\n          </div>\n        </div>\n        <div className=\"actions\">\n          <button className=\"toggle-button\" type=\"button\" {...rest}>\n            fechar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/marvel.69550def.png\";","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #b5b5b5;\n  max-width: 470px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 100%;\n  flex: 1;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    color: #b5b5b5;\n    background-color: #1c1c1c;\n    border-radius: 5px;\n    border: 2px solid #1c1c1c;\n\n    ${props =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &:focus {\n      border: 2px solid #eead0e;\n    }\n\n    &::placeholder {\n      color: #b5b5b5;\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n`;\n\nexport const Comics = styled.div`\n  margin-top: 80px;\n  max-width: 100%;\n\n  li {\n    background: #1c1c1c;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + li {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    button {\n      width: 150px;\n      height: 70px;\n      background: #eead0e;\n      border-radius: 5px;\n      border: 0;\n      color: #1c1c1c;\n      font-weight: bold;\n      transition: background-color 0.2s;\n\n      &:hover {\n        background: ${shade(0.2, '#EEAD0E')};\n      }\n    }\n  }\n\n    img {\n      width: 100px;\n      height: 150px;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #b5b5b5;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbcdd6;\n    }\n  }`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport api from '../../services/api';\n\nimport Modal from '../../components/Modal';\nimport logoMarvel from '../../assets/marvel.png';\n\nimport { Title, Form, Comics, Error } from './styles';\n\nexport interface Comic {\n  id: number;\n  title: string;\n  description: string;\n  pageCount: number;\n  images: {\n    path: string;\n    extension: string;\n    0: any;\n  };\n}\n\nconst Home: React.FC = () => {\n  const [comicName, setComicName] = useState('');\n  const [comicsData, setComicsData] = useState<Comic[]>([]);\n  const [card, setCard] = useState<Comic>();\n  const [inputError, setInputError] = useState('');\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (!comicsData || comicName) {\n      loadComics();\n    }\n  }, [comicName]);\n\n  async function loadComics(): Promise<void> {\n    const response = await api.get('v1/public/comics', {\n      params: {\n        titleStartsWith: comicName,\n      },\n    });\n\n    const { results } = response.data.data;\n    setComicsData(results);\n  }\n  const showModal = useCallback(() => {\n    setShow(!show);\n  }, [show]);\n\n  async function comicsSearch(text: any): Promise<void> {\n    const { value } = text.target;\n\n    if (!value) {\n      setInputError('Digite o título do quadrinho');\n      return;\n    }\n    try {\n      if (value.length) {\n        await setTimeout(() => {\n          setComicName(value);\n        }, 500);\n      } else {\n        setComicsData([]);\n        setInputError('Erro na busca por esse quadrinho');\n      }\n      setInputError('');\n      setComicName('');\n    } catch (err) {\n      setInputError('Erro na busca por esse quadrinho');\n    }\n  }\n\n  const showModalWithData = useCallback(\n    (data: Comic) => {\n      setCard(data);\n      setShow(!show);\n    },\n    [show],\n  );\n\n  return (\n    <>\n      <img\n        src={logoMarvel}\n        style={{ width: 150, height: 70, backgroundColor: '#b5b5b5' }}\n        alt=\"Marvel\"\n      />\n      <Title>Explore os quadrinhos da Marvel</Title>\n      <Form hasError={!!inputError} onSubmit={comicsSearch}>\n        <input\n          onChange={comicsSearch}\n          placeholder=\"Digite o título do quadrinho\"\n          type=\"text\"\n        />\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Comics>\n        {comicsData.length !== 0 &&\n          comicsData.map(result => (\n            <>\n              <li key={result.id}>\n                <img\n                  src={`${result.images[0]?.path}.${result.images[0]?.extension}`}\n                  alt={result.title}\n                />\n                <div>\n                  <strong>{result.title}</strong>\n                </div>\n                <button type=\"button\" onClick={() => showModalWithData(result)}>\n                  Detalhes\n                </button>\n              </li>\n            </>\n          ))}\n      </Comics>\n      <Modal onClick={showModal} show={show} comic={card} />\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n    <Route component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}